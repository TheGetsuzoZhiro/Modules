var __importDefault=this&&this.__importDefault||function(r){return r&&r.__esModule?r:{"default":r}};Object.defineProperty(exports,"__esModule",{value:!0});exports.makeMessagesRecvSocket=void 0;
const boom_1=require("@hapi/boom"),crypto_1=require("crypto"),node_cache_1=__importDefault(require("node-cache")),WAProto_1=require("../../WAProto"),Defaults_1=require("../Defaults"),Types_1=require("../Types"),Utils_1=require("../Utils"),Utils_2=require("../Utils"),make_mutex_1=require("../Utils/make-mutex"),WABinary_1=require("../WABinary"),groups_1=require("./groups"),messages_send_1=require("./messages-send"),makeMessagesRecvSocket=r=>{function Q(a){a=y(a);var b=a.slice(0,32);b=(0,Utils_1.derivePairingCodeKey)(h.creds.pairingCode,
b);const d=a.slice(32,48);a=a.slice(48,80);return(0,Utils_1.aesDecryptCTR)(a,b,d)}function y(a){if(void 0===a)throw new boom_1.Boom("Invalid buffer",{statusCode:400});return a instanceof Buffer?a:Buffer.from(a)}const {logger:k,retryRequestDelayMs:H,maxMsgRetryCount:I,getMessage:J,shouldIgnoreJid:A}=r,B=(0,messages_send_1.makeMessagesSocket)(r),{ev:n,authState:h,ws:v,processingMutex:C,signalRepository:R,query:D,upsertMessage:E,resyncAppState:S,onUnexpectedError:K,assertSessions:L,sendNode:M,relayMessage:N,
sendReceipt:O,uploadPreKeys:T,getUSyncDevices:U,createParticipantNodes:V}=B,W=(0,make_mutex_1.makeMutex)(),w=r.msgRetryCounterCache||new node_cache_1.default({stdTTL:Defaults_1.DEFAULT_CACHE_TTLS.MSG_RETRY,useClones:!1}),F=r.callOfferCache||new node_cache_1.default({stdTTL:Defaults_1.DEFAULT_CACHE_TTLS.CALL_OFFER,useClones:!1});let G=!1;const t=async({tag:a,attrs:b,content:d})=>{const c={tag:"ack",attrs:{id:b.id,to:b.from,class:a}};b.participant&&(c.attrs.participant=b.participant);b.recipient&&(c.attrs.recipient=
b.recipient);b.type&&("message"!==a||(0,WABinary_1.getBinaryNodeChild)({tag:a,attrs:b,content:d},"unavailable"))&&(c.attrs.type=b.type);"message"===a&&(0,WABinary_1.getBinaryNodeChild)({tag:a,attrs:b,content:d},"unavailable")&&(c.attrs.from=h.creds.me.id);k.debug({recv:{tag:a,attrs:b},sent:c.attrs},"sent ack");await M(c)},P=async(a,b=!1)=>{const d=a.attrs.id;let c=w.get(d)||0;if(c>=I)k.debug({retryCount:c,msgId:d},"reached retry limit, clearing"),w.del(d);else{c+=1;w.set(d,c);var {account:g,signedPreKey:e,
signedIdentityKey:m}=h.creds,l=(0,Utils_1.encodeSignedDeviceIdentity)(g,!0);await h.keys.transaction(async()=>{const f={tag:"receipt",attrs:{id:d,type:"retry",to:a.attrs.from},content:[{tag:"retry",attrs:{count:c.toString(),id:a.attrs.id,t:a.attrs.t,v:"1"}},{tag:"registration",attrs:{},content:(0,Utils_1.encodeBigEndian)(h.creds.registrationId)}]};a.attrs.recipient&&(f.attrs.recipient=a.attrs.recipient);a.attrs.participant&&(f.attrs.participant=a.attrs.participant);if(1<c||b){const {update:p,preKeys:q}=
await (0,Utils_1.getNextPreKeys)(h,1),[u]=Object.keys(q),x=q[+u];f.content.push({tag:"keys",attrs:{},content:[{tag:"type",attrs:{},content:Buffer.from(Defaults_1.KEY_BUNDLE_TYPE)},{tag:"identity",attrs:{},content:m.public},(0,Utils_1.xmppPreKey)(x,+u),(0,Utils_1.xmppSignedPreKey)(e),{tag:"device-identity",attrs:{},content:l}]});n.emit("creds.update",p)}await M(f);k.info({msgAttrs:a.attrs,retryCount:c},"sent retry receipt")})}},X=async a=>{var b=a.attrs.from;b===WABinary_1.S_WHATSAPP_NET?(a=+(0,WABinary_1.getBinaryNodeChild)(a,
"count").attrs.value,b=a<Defaults_1.MIN_PREKEY_COUNT,k.debug({count:a,shouldUploadMorePreKeys:b},"recv pre-key count"),b&&await T()):(0,WABinary_1.getBinaryNodeChild)(a,"identity")?k.info({jid:b},"identity changed"):k.info({node:a},"unknown encrypt notification")},Y=(a,b,d)=>{switch(null===b||void 0===b?void 0:b.tag){case "create":b=(0,groups_1.extractGroupMetadata)(b);d.messageStubType=Types_1.WAMessageStubType.GROUP_CREATE;d.messageStubParameters=[b.subject];d.key={participant:b.owner};n.emit("chats.upsert",
[{id:b.id,name:b.subject,conversationTimestamp:b.creation}]);n.emit("groups.upsert",[{...b,author:a}]);break;case "ephemeral":case "not_ephemeral":d.message={protocolMessage:{type:WAProto_1.proto.Message.ProtocolMessage.Type.EPHEMERAL_SETTING,ephemeralExpiration:+(b.attrs.expiration||0)}};break;case "promote":case "demote":case "remove":case "add":case "leave":var c=`GROUP_PARTICIPANT_${b.tag.toUpperCase()}`;d.messageStubType=Types_1.WAMessageStubType[c];c=(0,WABinary_1.getBinaryNodeChildren)(b,"participant").map(g=>
g.attrs.jid);1===c.length&&(0,WABinary_1.areJidsSameUser)(c[0],a)&&"remove"===b.tag&&(d.messageStubType=Types_1.WAMessageStubType.GROUP_PARTICIPANT_LEAVE);d.messageStubParameters=c;break;case "subject":d.messageStubType=Types_1.WAMessageStubType.GROUP_CHANGE_SUBJECT;d.messageStubParameters=[b.attrs.subject];break;case "announcement":case "not_announcement":d.messageStubType=Types_1.WAMessageStubType.GROUP_CHANGE_ANNOUNCE;d.messageStubParameters=["announcement"===b.tag?"on":"off"];break;case "locked":case "unlocked":d.messageStubType=
Types_1.WAMessageStubType.GROUP_CHANGE_RESTRICT;d.messageStubParameters=["locked"===b.tag?"on":"off"];break;case "invite":d.messageStubType=Types_1.WAMessageStubType.GROUP_CHANGE_INVITE_LINK;d.messageStubParameters=[b.attrs.code];break;case "member_add_mode":if(a=b.content)d.messageStubType=Types_1.WAMessageStubType.GROUP_MEMBER_ADD_MODE,d.messageStubParameters=[a.toString()];break;case "membership_approval_mode":if(a=(0,WABinary_1.getBinaryNodeChild)(b,"group_join"))d.messageStubType=Types_1.WAMessageStubType.GROUP_MEMBERSHIP_JOIN_APPROVAL_MODE,
d.messageStubParameters=[a.attrs.state]}},Z=async a=>{var b,d,c;const g={};var [e]=(0,WABinary_1.getAllBinaryNodeChildren)(a),m=a.attrs.type,l=(0,WABinary_1.jidNormalizedUser)(a.attrs.from);switch(m){case "privacy_token":a=(0,WABinary_1.getBinaryNodeChildren)(e,"token");for(const {attrs:p,content:q}of a)a=p.jid,n.emit("chats.update",[{id:a,tcToken:q}]),k.debug({jid:a},"got privacy token update");break;case "w:gp2":Y(a.attrs.participant,e,g);break;case "mediaretry":a=(0,Utils_1.decodeMediaRetryNode)(a);
n.emit("messages.media-update",[a]);break;case "encrypt":await X(a);break;case "devices":a=(0,WABinary_1.getBinaryNodeChildren)(e,"device");(0,WABinary_1.areJidsSameUser)(e.attrs.jid,h.creds.me.id)&&(a=a.map(p=>p.attrs.jid),k.info({deviceJids:a},"got my own devices"));break;case "server_sync":(a=(0,WABinary_1.getBinaryNodeChild)(a,"collection"))&&await S([a.attrs.name],!1);break;case "picture":e=(0,WABinary_1.getBinaryNodeChild)(a,"set");var f=(0,WABinary_1.getBinaryNodeChild)(a,"delete");n.emit("contacts.update",
[{id:(0,WABinary_1.jidNormalizedUser)(null===(b=null===a||void 0===a?void 0:a.attrs)||void 0===b?void 0:b.jid)||(null===(c=null===(d=e||f)||void 0===d?void 0:d.attrs)||void 0===c?void 0:c.hash)||"",imgUrl:e?"changed":"removed"}]);(0,WABinary_1.isJidGroup)(l)&&(a=e||f,g.messageStubType=Types_1.WAMessageStubType.GROUP_CHANGE_ICON,e&&(g.messageStubParameters=[e.attrs.id]),g.participant=null===a||void 0===a?void 0:a.attrs.author,g.key={...(g.key||{}),participant:null===e||void 0===e?void 0:e.attrs.author});
break;case "account_sync":if("disappearing_mode"===e.tag)a=+e.attrs.duration,b=+e.attrs.t,k.info({newDuration:a},"updated account disappearing mode"),n.emit("creds.update",{accountSettings:{...h.creds.accountSettings,defaultDisappearingMode:{ephemeralExpiration:a,ephemeralSettingTimestamp:b}}});else if("blocklist"===e.tag){a=(0,WABinary_1.getBinaryNodeChildren)(e,"item");for({attrs:f}of a)n.emit("blocklist.update",{blocklist:[f.jid],type:"block"===f.action?"add":"remove"})}break;case "link_code_companion_reg":d=
(0,WABinary_1.getBinaryNodeChild)(a,"link_code_companion_reg"),a=y((0,WABinary_1.getBinaryNodeChildBuffer)(d,"link_code_pairing_ref")),b=y((0,WABinary_1.getBinaryNodeChildBuffer)(d,"primary_identity_pub")),d=y((0,WABinary_1.getBinaryNodeChildBuffer)(d,"link_code_pairing_wrapped_primary_ephemeral_pub")),d=Q(d),d=Utils_1.Curve.sharedKey(h.creds.pairingEphemeralKeyPair.private,d),c=(0,crypto_1.randomBytes)(32),e=(0,crypto_1.randomBytes)(32),f=(0,Utils_1.hkdf)(d,32,{salt:e,info:"link_code_pairing_key_bundle_encryption_key"}),
m=Buffer.concat([Buffer.from(h.creds.signedIdentityKey.public),b,c]),l=(0,crypto_1.randomBytes)(12),f=(0,Utils_1.aesEncryptGCM)(m,f,l,Buffer.alloc(0)),e=Buffer.concat([e,l,f]),b=Utils_1.Curve.sharedKey(h.creds.signedIdentityKey.private,b),b=Buffer.concat([d,b,c]),h.creds.advSecretKey=(0,Utils_1.hkdf)(b,32,{info:"adv_secret"}).toString("base64"),await D({tag:"iq",attrs:{to:WABinary_1.S_WHATSAPP_NET,type:"set",id:B.generateMessageTag(),xmlns:"md"},content:[{tag:"link_code_companion_reg",attrs:{jid:h.creds.me.id,
stage:"companion_finish"},content:[{tag:"link_code_pairing_wrapped_key_bundle",attrs:{},content:e},{tag:"companion_identity_public",attrs:{},content:h.creds.signedIdentityKey.public},{tag:"link_code_pairing_ref",attrs:{},content:a}]}]}),h.creds.registered=!0,n.emit("creds.update",h.creds)}if(Object.keys(g).length)return g},aa=(a,b)=>{a=`${a}:${b}`;b=(w.get(a)||0)+1;w.set(a,b)},ba=async(a,b,d)=>{var c;const g=await Promise.all(b.map(f=>J({...a,id:f})));var e=a.remoteJid;const m=a.participant||e,l=
!(null===(c=(0,WABinary_1.jidDecode)(m))||void 0===c?0:c.device);await L([m],!0);(0,WABinary_1.isJidGroup)(e)&&await h.keys.set({"sender-key-memory":{[e]:null}});k.debug({participant:m,sendToAll:l},"forced new session for retry recp");for(c=0;c<g.length;c++)if(e=g[c]){aa(b[c],m);const f={messageId:b[c]};l?f.useUserDevicesCache=!1:f.participant={jid:m,count:+d.attrs.count};await N(a.remoteJid,e,f)}else k.debug({jid:a.remoteJid,id:b[c]},"recv retry request, but message not available")},ca=async a=>
{var b,d;const {attrs:c,content:g}=a,e=c.from.includes("lid"),m=(0,WABinary_1.areJidsSameUser)(c.participant||c.from,e?null===(b=h.creds.me)||void 0===b?void 0:b.lid:null===(d=h.creds.me)||void 0===d?void 0:d.id),l=!m||(0,WABinary_1.isJidGroup)(c.from)?c.from:c.recipient,f={remoteJid:l,id:"",fromMe:!c.recipient||"retry"===c.type&&m,participant:c.participant};if(A(l)&&"@s.whatsapp.net"!==l)k.debug({remoteJid:l},"ignoring receipt from jid"),await t(a);else{var p=[c.id];Array.isArray(g)&&(b=(0,WABinary_1.getBinaryNodeChildren)(g[0],
"item"),p.push(...b.map(q=>q.attrs.id)));await Promise.all([C.mutex(async()=>{const q=(0,Utils_1.getStatusFromReceiptType)(c.type);if("undefined"!==typeof q&&(q>WAProto_1.proto.WebMessageInfo.Status.DELIVERY_ACK||!m))if((0,WABinary_1.isJidGroup)(l)){if(c.participant){const u=q===WAProto_1.proto.WebMessageInfo.Status.DELIVERY_ACK?"receiptTimestamp":"readTimestamp";n.emit("message-receipt.update",p.map(x=>({key:{...f,id:x},receipt:{userJid:(0,WABinary_1.jidNormalizedUser)(c.participant),[u]:+c.t}})))}}else n.emit("messages.update",
p.map(u=>({key:{...f,id:u},update:{status:q}})));if("retry"===c.type){f.participant=f.participant||c.from;const u=(0,WABinary_1.getBinaryNodeChild)(a,"retry");if((w.get(`${p[0]}:${f.participant}`)||0)<I)if(f.fromMe)try{k.debug({attrs:c,key:f},"recv retry request"),await ba(f,p,u)}catch(x){k.error({key:f,ids:p,trace:x.stack},"error in sending message again")}else k.info({attrs:c,key:f},"recv retry for not fromMe message");else k.info({attrs:c,key:f},"will not send message again, as sent too many times")}}),
t(a)])}},da=async a=>{const b=a.attrs.from;A(b)&&"@s.whatsapp.net"!==b?(k.debug({remoteJid:b,id:a.attrs.id},"ignored notification"),await t(a)):await Promise.all([C.mutex(async()=>{var d;const c=await Z(a);if(c){const g=(0,WABinary_1.areJidsSameUser)(a.attrs.participant||b,h.creds.me.id);c.key={remoteJid:b,fromMe:g,participant:a.attrs.participant,id:a.attrs.id,...(c.key||{})};null!==(d=c.participant)&&void 0!==d?d:c.participant=a.attrs.participant;c.messageTimestamp=+a.attrs.t;d=WAProto_1.proto.WebMessageInfo.fromObject(c);
await E(d,"append")}}),t(a)])},ea=async a=>{var b,d;if(A(a.attrs.from)&&"@s.whatsapp.net"!==a.attrs.from)k.debug({key:a.attrs.key},"ignored message"),await t(a);else{var {fullMessage:c,category:g,author:e,decrypt:m}=(0,Utils_1.decryptMessageNode)(a,h.creds.me.id,h.creds.me.lid||"",R,k);(null===(d=null===(b=c.message)||void 0===b?void 0:b.protocolMessage)||void 0===d?void 0:d.type)===WAProto_1.proto.Message.ProtocolMessage.Type.SHARE_PHONE_NUMBER&&a.attrs.sender_pn&&n.emit("chats.phoneNumberShare",
{lid:a.attrs.from,jid:a.attrs.sender_pn});await Promise.all([C.mutex(async()=>{await m();if(c.messageStubType===WAProto_1.proto.WebMessageInfo.StubType.CIPHERTEXT)W.mutex(async()=>{if(v.isOpen){const f=(0,WABinary_1.getBinaryNodeChild)(a,"enc");await P(a,!f);H&&await (0,Utils_1.delay)(H)}else k.debug({node:a},"connection closed, ignoring retry req")});else{var l=void 0;let f=c.key.participant;"peer"===g?l="peer_msg":c.key.fromMe?(l="sender",(0,WABinary_1.isJidUser)(c.key.remoteJid)&&(f=e)):G||(l=
"inactive");await O(c.key.remoteJid,f,[c.key.id],l);(0,Utils_1.getHistoryMsg)(c.message)&&(l=(0,WABinary_1.jidNormalizedUser)(c.key.remoteJid),await O(l,void 0,[c.key.id],"hist_sync"))}(0,Utils_2.cleanMessage)(c,h.creds.me.id);await E(c,a.attrs.offline?"append":"notify")}),t(a)])}},fa=async a=>{var {attrs:b}=a,[d]=(0,WABinary_1.getAllBinaryNodeChildren)(a);const c=d.attrs["call-id"],g=d.attrs.from||d.attrs["call-creator"],e=(0,Utils_1.getCallStatusFromNode)(d);b={chatId:b.from,from:g,id:c,date:new Date(1E3*
+b.t),offline:!!b.offline,status:e};"offer"===e&&(b.isVideo=!!(0,WABinary_1.getBinaryNodeChild)(d,"video"),b.isGroup="group"===d.attrs.type||!!d.attrs["group-jid"],b.groupJid=d.attrs["group-jid"],F.set(b.id,b));if(d=F.get(b.id))b.isVideo=d.isVideo,b.isGroup=d.isGroup;"reject"!==e&&"accept"!==e&&"timeout"!==e||F.del(b.id);n.emit("call",[b]);await t(a)},ha=async({attrs:a})=>{const b={remoteJid:a.from,fromMe:!0,id:a.id};if(a.phash){k.info({attrs:a},"received phash in ack, resending message...");const d=
await J(b);d?await N(b.remoteJid,d,{messageId:b.id,useUserDevicesCache:!1}):k.warn({attrs:a},"could not send message again, as it was not found")}a.error&&(k.warn({attrs:a},"received error in ack"),n.emit("messages.update",[{key:b,update:{status:Types_1.WAMessageStatus.ERROR,messageStubParameters:[a.error]}}]))},z=async(a,b,d)=>{n.buffer();await function(){return d(a).catch(c=>K(c,b))}();n.flush()};v.on("CB:message",a=>{z(a,"processing message",ea)});v.on("CB:call",async a=>{z(a,"handling call",fa)});
v.on("CB:receipt",a=>{z(a,"handling receipt",ca)});v.on("CB:notification",async a=>{z(a,"handling notification",da)});v.on("CB:ack,class:message",a=>{ha(a).catch(b=>K(b,"handling bad ack"))});n.on("call",([a])=>{if("timeout"===a.status||"offer"===a.status&&a.isGroup){var b={key:{remoteJid:a.chatId,id:a.id,fromMe:!1},messageTimestamp:(0,Utils_1.unixTimestampSeconds)(a.date)};"timeout"===a.status?b.messageStubType=a.isGroup?a.isVideo?Types_1.WAMessageStubType.CALL_MISSED_GROUP_VIDEO:Types_1.WAMessageStubType.CALL_MISSED_GROUP_VOICE:
a.isVideo?Types_1.WAMessageStubType.CALL_MISSED_VIDEO:Types_1.WAMessageStubType.CALL_MISSED_VOICE:b.message={call:{callKey:Buffer.from(a.id)}};b=WAProto_1.proto.WebMessageInfo.fromObject(b);E(b,a.offline?"append":"notify")}});n.on("connection.update",({isOnline:a})=>{"undefined"!==typeof a&&(G=a,k.trace(`sendActiveReceipts set to "${G}"`))});return{...B,sendMessageAck:t,sendRetryRequest:P,offerCall:async(a,b=!1)=>{const d=(0,crypto_1.randomBytes)(16).toString("hex").toUpperCase().substring(0,64);
var c=[];c.push({tag:"audio",attrs:{enc:"opus",rate:"16000"},content:void 0});c.push({tag:"audio",attrs:{enc:"opus",rate:"8000"},content:void 0});b&&c.push({tag:"video",attrs:{enc:"vp8",dec:"vp8",orientation:"0",screen_width:"1920",screen_height:"1080",device_orientation:"0"},content:void 0});c.push({tag:"net",attrs:{medium:"3"},content:void 0});c.push({tag:"capability",attrs:{ver:"1"},content:new Uint8Array([1,4,255,131,207,4])});c.push({tag:"encopt",attrs:{keygen:"2"},content:void 0});b=(0,crypto_1.randomBytes)(32);
const g=(await U([a],!0,!1)).map(({user:l,device:f})=>(0,WABinary_1.jidEncode)(l,"s.whatsapp.net",f));await L(g,!0);const {nodes:e,shouldIncludeDeviceIdentity:m}=await V(g,{call:{callKey:new Uint8Array(b)}},{count:"0"});c.push({tag:"destination",attrs:{},content:e});m&&c.push({tag:"device-identity",attrs:{},content:(0,Utils_1.encodeSignedDeviceIdentity)(h.creds.account,!0)});c={tag:"call",attrs:{id:(0,Utils_1.generateMessageIDV2)(),to:a},content:[{tag:"offer",attrs:{"call-id":d,"call-creator":h.creds.me.id},
content:c}]};await D(c);return{id:d,to:a}},rejectCall:async(a,b)=>{await D({tag:"call",attrs:{from:h.creds.me.id,to:b},content:[{tag:"reject",attrs:{"call-id":a,"call-creator":b,count:"0"},content:void 0}]})}}};exports.makeMessagesRecvSocket=makeMessagesRecvSocket;
